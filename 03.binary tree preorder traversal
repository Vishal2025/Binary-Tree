/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

 //    recursive approach for preorder
    void preorderhelper(TreeNode* root, vector<int>& ans) {
        if (root == NULL) return;
        ans.push_back(root->val);
        preorderhelper(root->left, ans);
        preorderhelper(root->right, ans);
    }
    vector<int> preorderTraversal(TreeNode* root) {
		 //    iterative approach for preorder
        if(root==NULL)
        return {};
        stack<TreeNode*>s;
        s.push(root);
        vector<int>ans;
        while(!s.empty()){
           
          root=s.top();
          s.pop();

          ans.push_back(root->val);

          if(root->right!=NULL)
          s.push(root->right);

          if(root->left!=NULL)
          s.push(root->left);
        }
        return ans;
    }
};
